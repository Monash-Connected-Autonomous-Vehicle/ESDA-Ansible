---
- name: Initialise Users
  hosts: all
  tasks:
    - name: Add users if they do not exist
      ansible.builtin.user:
        name: "{{ item.username }}"
        comment: "{{ item.comment }}"
        # Set the user's password to their username only if the user does not already exist
        update_password: on_create
        password: "{{ item.username | password_hash('sha512') }}"
        groups: "{{ item.additional_groups }}"
        append: true
        create_home: true
      loop: "{{ users }}"
      # Register any added users to a variable so we can force password resets
      register: added_users
      # Fire notification so we can force any added users to set their passwords on login
      notify: force_password_reset
      become: true
      become_user: root

    - name: "Ensure User .ssh folders exist"
      ansible.builtin.file:
        path: "/home/{{ item.username }}/.ssh"
        state: directory
        owner: "{{ item.username }}"
        group: "{{ item.username }}"
        mode: "u=rwx,g=rwx,o="
      loop: "{{ users }}"
      become: true
      become_user: root

    - name: Enroll User SSH Authorized Public Keys
      # Ensures that the defined ssh key is present in the user's authorized_keys file
      ansible.builtin.lineinfile:
        dest: "/home/{{ item.username }}/.ssh/authorized_keys"
        line: "{{ item.ssh_authorized_key }}"
        search_string: "{{ item.ssh_authorized_key }}"
        # Set the owner to root to prevent a compromised account adding additional ssh keys (user has read only access)
        owner: "root"
        group: "root"
        mode: "u=rwx,g=rwx,o=r"
        create: true
      loop: "{{ users }}"
      become: true
      become_user: root

  handlers:
    - name: Force default password expiration for new user accounts
      ansible.builtin.command: "chage -d 0 {{ item['invocation']['module_args']['name'] }}"
      loop: "{{ added_users.results }}"
      when: item.changed == true
      listen: force_password_reset
      become: true
      become_user: root
